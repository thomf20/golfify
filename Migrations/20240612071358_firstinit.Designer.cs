// <auto-generated />
using System;
using Golfify.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Golfify.API.Migrations
{
    [DbContext(typeof(GolfifyDbContext))]
    [Migration("20240612071358_firstinit")]
    partial class firstinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Golfify.Core.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hcp")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoundId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Golfify.Core.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoleNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Golfify.Core.Models.Player", b =>
                {
                    b.HasOne("Golfify.Core.Models.Round", null)
                        .WithMany("Players")
                        .HasForeignKey("RoundId");
                });

            modelBuilder.Entity("Golfify.Core.Models.Round", b =>
                {
                    b.OwnsMany("Golfify.Core.Models.Course", "Courses", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("HoleNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Points")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("RoundId")
                                .HasColumnType("int");

                            b1.Property<int>("Strokes")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("RoundId");

                            b1.ToTable("Course");

                            b1.WithOwner()
                                .HasForeignKey("RoundId");
                        });

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Golfify.Core.Models.Round", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
